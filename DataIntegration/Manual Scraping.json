{
  "name": "Manual Scraping",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -360,
        240
      ],
      "id": "28eb326a-9163-4901-998f-f841b91e0081",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "User-Agent",
              "value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "text"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        560,
        240
      ],
      "id": "fe1f0511-3305-4e79-9926-26c82cf03c94",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"urlsToScrape\":[\n    {\"url\": \"https://www.aktmotos.com/motos/calle/nkd-125-led\" },\n    { \"url\": \"https://www.aktmotos.com/motos/calle/cr4-125-unishock\" },\n    { \"url\": \"https://www.aktmotos.com/motos/calle/cr4-200-pro\" },\n    { \"url\": \"https://www.aktmotos.com/node/2903\" },\n    { \"url\": \"https://www.aktmotos.com/NKD_FP\" },\n    { \"url\": \"https://www.aktmotos.com/NKD_Colombiana\" },\n    { \"url\": \"https://www.aktmotos.com/motos/automaticas/dynamic-pro-cbs\" },\n    { \"url\": \"https://www.aktmotos.com/motos/automaticas/jet14\" },\n    { \"url\": \"https://www.aktmotos.com/nueva_mawi_125\" },\n    { \"url\": \"https://www.aktmotos.com/nueva_mawi_fp\" },\n    { \"url\": \"https://www.aktmotos.com/DYN_RX\" },\n    { \"url\": \"https://www.aktmotos.com/motos/semiautomaticas/special-110-x\" }\n  ]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -160,
        240
      ],
      "id": "19ed04c0-3cd3-4067-9c62-28da9af78d39",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "return $input.first().json.urlsToScrape;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        60,
        240
      ],
      "id": "35edbebe-1de4-4c61-8c72-7dd595ba503c",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        300,
        240
      ],
      "id": "1a66482d-3c24-4464-9c5b-993906ff1dbf",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "jsCode": "// Get all input items\nconst items = $input.all();\n\n// Function to convert markdown to plain text\nfunction convertMarkdownToPlainText(markdown) {\n  // Ensure we're working with a string\n  let plainText = String(markdown);\n  \n  // Remove links: [text](URL)\n  plainText = plainText.replace(/\\[([^\\]]+)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove images: ![alt text](URL)\n  plainText = plainText.replace(/!\\[([^\\]]*)\\]\\([^\\)]+\\)/g, '$1');\n  \n  // Remove headers: # Header\n  plainText = plainText.replace(/(#+)\\s*(.*)/g, '$2');\n  \n  // Remove bold and italic formatting\n  plainText = plainText.replace(/\\*\\*|\\*|__|_/g, '');\n  \n  // Remove HTML special characters\n  plainText = plainText.replace(/([<>])/g, '');\n  \n  // Remove extra line breaks\n  plainText = plainText.replace(/\\n\\s*\\n/g, '\\n');\n  \n  // Remove bullet points or numbered list formatting\n  plainText = plainText.replace(/^\\s*[-*+]\\s+/gm, '');\n  \n  return plainText.trim();\n}\n\n// Process all items and combine them with page numbers and clear formatting\nconst combinedContent = items.map((item, index) => {\n  let content;\n  if (typeof item === 'object' && item !== null) {\n    content = item.data || item.content || item.text || JSON.stringify(item);\n  } else {\n    content = String(item);\n  }\n  \n  const pageNumber = index + 1;\n  const processedContent = convertMarkdownToPlainText(content);\n  \n  return `Page ${pageNumber}\\n──────────────────\\n\\n${processedContent}\\n\\n\\n`;\n}).join('\\n\\n'); // Double line breaks between pages\n\n// Return with both raw content and formatted content\nreturn [{\n  json: {\n    content: combinedContent,\n    rawContent: items.map((item, index) => ({\n      pageNumber: index + 1,\n      content: convertMarkdownToPlainText(String(item.data || item.content || item.text || item))\n    }))\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        740,
        240
      ],
      "id": "efba3868-72b4-4fbc-84a4-aba4402fbd29",
      "name": "Clean Documents1"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.embeddingsGoogleGemini",
      "typeVersion": 1,
      "position": [
        960,
        460
      ],
      "id": "a34d1266-93cf-4b0a-ab5a-b7c8a631d8c3",
      "name": "Embeddings Google Gemini",
      "credentials": {
        "googlePalmApi": {
          "id": "l5wMgSdPTVrnNWTw",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "gemini-scraper",
          "mode": "list",
          "cachedResultName": "gemini-scraper"
        },
        "options": {
          "pineconeNamespace": "n8n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1,
      "position": [
        980,
        240
      ],
      "id": "b2f34a25-c432-49ef-b8fa-908803120cb8",
      "name": "Pinecone Vector",
      "credentials": {
        "pineconeApi": {
          "id": "r7qAPleXy11TOW1W",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.content }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1080,
        460
      ],
      "id": "a4ac0ed6-2e5f-4978-9b03-65447537fda3",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "chunkOverlap": 20,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1160,
        660
      ],
      "id": "cfe657cf-03d8-4e65-92d5-798ab4f292fe",
      "name": "Recursive Character Text Splitter"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Clean Documents1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Documents1": {
      "main": [
        [
          {
            "node": "Pinecone Vector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings Google Gemini": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7a5c1d9e-0546-43a6-ac75-3388c23ad11e",
  "meta": {
    "instanceId": "841d6ac312625e899d3667ff1ab904883d0fa3298c98d163673668f5cc90c97a"
  },
  "id": "t5WKEj421ImqraAK",
  "tags": []
}